{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/charts/line-chart-gauss.ts","src/charts/line-charts.ts","src/charts/parallel-coordinates-gauss.ts","src/resources/index.ts","src/gauss/gauss.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from \"aurelia-router\"\n\nexport class App {\n  router = Router;\n\n  configureRouter(config: RouterConfiguration, router) {\n      config.title = \"Improve\";\n      config.map([\n          // { route: \"\", moduleId: \"empty/no-selection\", nav: true, title: \"Select\" },\n          // { route: \"abb/\", moduleId: \"abbvie/abb\", nav: false, title: \"Abb\", name: \"abb\" },\n          // { route: \"det/\", moduleId: \"details/details\", nav: false, title: \"Details\", name: \"det\" },\n          // { route: \"vpsa/\", moduleId: \"vpsa/vpsa\", nav: true, title: \"SIR - Classic Brushing\", name: \"vpsa\" },\n        { route: \"\", moduleId: \"gauss/gauss\", nav: true, title: \"SIR - New Brushing\", name: \"sir\" },\n        // { route: \"sir_hist/\", moduleId: \"gauss_hist/gauss\", nav: true, title: \"SIR - New Brushing - Histogram\", name: \"sir\" },\n        // { route: \"spatialsirclassic/\", moduleId: \"spatial_classic/epidemics\", nav: true, title: \"Spatial SIR - Classic Brushing\", name: \"sir\" },\n        // { route: \"spatialsir/\", moduleId: \"spatial_sir/epidemics\", nav: true, title: \"Spatial SIR - New Brushing\", name: \"sir\" },\n        // { route: \"spatialsircolor/\", moduleId: \"colormap/epidemics\", nav: true, title: \"Spatial SIR - Colormap\", name: \"sir\" },\n        //   { route: \"drift/\", moduleId: \"drift/drift\", nav: true, title: \"Genetic Drift\", name: \"drift\" },\n        //   { route: \"migration/\", moduleId: \"spatial_migration/migration\", nav: true, title: \"Spatial Migration\", name: \"migration\" },\n      ]);\n\n      this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin(\"aurelia-computed\")\n    .plugin(\"d3-extended\")\n    .plugin(\"d3-random\")\n    .plugin(\"aurelia-bootstrap\")\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import * as d3 from \"d3\";\nimport { inject, noView, bindable, bindingMode, BindingEngine } from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class LineChartGauss {\n  // One-Way\n  @bindable margin = { top: 20, right: 60, bottom: 35, left: 60, middle: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable x_label = \"days\";\n  @bindable y_label = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n\n  // D3 variables\n  private mouse_event;\n  private svg;\n  private linechart;\n  private focus;\n  private x;\n  private y;\n  private focus_x;\n  private gauss_x;\n  private gauss_y;\n  private gauss_sigma;\n  private gauss_max_sigma;\n  private gradientColor;\n  private valueline;\n  private focusline;\n  private focus_data;\n  private histogram;\n  private brush;\n  private center = 1.0;\n  private weight = 1.0;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n  private lc_width = 50;\n  private lc_height = 500;\n  private focus_width = 50;\n  private focus_height = 500;\n  private focus_offset = 100;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n    if (this.data) {\n      // subscribe to the data array and watch for changes\n      this.subscription = this.bindingEngine\n        .collectionObserver(this.data)\n        .subscribe(splices => this.dataMutated(splices));\n    }\n\n    // set the dimensions and margins of the graph\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.lc_width = this.width * 0.8;\n    this.focus_width = this.width * 0.2 - this.margin.left;\n\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n    this.lc_height = this.y_size - this.margin.top - this.margin.bottom;\n    this.focus_height = this.y_size - this.margin.top - this.margin.bottom;\n\n    this.focus_offset = this.lc_width + this.margin.middle + this.margin.left;\n\n    this.initChart()\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    if (this.data.length > 1) {\n      this.updateChart();\n      this.focus.selectAll(\"path.focusline\").remove()\n    }\n    else {\n      this.svg.selectAll(\".line\").remove()\n      this.focus.selectAll(\".bar\").remove()\n      this.focus.selectAll(\"path.focusline\").remove()\n    }\n  }\n\n  redrawChanged() {\n    if (this.data.length > 1) {\n      this.updateHighlight();\n    }\n  }\n\n  unbind() {\n    this.subscription.dispose();\n  }\n\n  getGaussian() {\n    let data = [];\n    let rnd = d3.randomUniform(-5, 5);\n\n    // loop to populate data array with\n    // probability - quantile pairs\n    for (var i = 0; i < 10000; i++) {\n      let q = rnd() // calc random draw from uniform dist\n      let p = this.gaussian(q, this.gauss_y.invert(this.center), this.gauss_sigma(this.weight)) // calc prob of rand draw\n\n      // Set very low probability to zero\n      if(p < 0.0001) p = 0;\n\n      let el = {\n        \"y\": q,\n        \"x\": p\n      }\n      data.push(el)\n    };\n\n    this.gradientColor.domain([0, d3.max(data, x => x[\"x\"])])\n    // need to sort for plotting\n    data.sort(function(a, b) { return (a.y > b.y) ? 1 : ((b.y > a.y) ? -1 : 0); });\n\n    return data;\n  };\n\n  //taken from Jason Davies science library\n  // https://github.com/jasondavies/science.js/\n  gaussian(x, mean, sigma) {\n    let gaussianConstant = 1 / Math.sqrt(2 * Math.PI);\n\n    x = (x - mean) / sigma;\n    let g = gaussianConstant * Math.exp(-.5 * x * x) / sigma;\n\n    if (g < 0) {\n      g = 0;\n    }\n\n    return g;\n  }\n\n  initChart() {\n    let self = this;\n\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.linechart = this.svg\n      .append(\"g\")\n      .attr(\"width\", this.lc_width)\n      .attr(\"height\", this.lc_height)\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \", \" + this.margin.top + \")\")\n      .on(\"click\", (d) => {\n        this.resetFilter();\n      });\n\n    this.focus = this.svg\n      .append(\"g\")\n      .attr(\"transform\",\n      \"translate(\" + this.focus_offset + \", \" + this.margin.top + \")\")\n\n    this.focus\n      .append(\"rect\")\n      .attr(\"width\", this.focus_width)\n      .attr(\"height\", this.focus_height)\n      .style(\"opacity\", 0)\n      .on(\"mousedown\", function(d) {\n        let out = new Map();\n        self.center = self.y.invert(d3.mouse(this)[1]);\n        self.weight = d3.mouse(this)[0];\n        self.createGauss();\n\n        self.data.forEach(d => {\n          out.set(\n            d[\"id\"],\n            self.gradientColor(self.gaussian(self.gauss_y.invert(d.data[d.data.length - 1][self.y_attribute]), self.gauss_y.invert(self.center), self.gauss_sigma(self.weight)))\n          )\n        })\n\n        self.brushing = out;\n\n        self.updateHighlight();\n\n        self.mouse_event = d3.select(this)\n          .on(\"mousemove\", function(d) {\n            let out = new Map();\n            self.center = self.y.invert(d3.mouse(this)[1]);\n\n            self.weight = d3.mouse(this)[0];\n            self.updateGauss();\n\n            self.data.forEach(d => {\n              out.set(\n                d[\"id\"],\n                self.gradientColor(self.gaussian(self.gauss_y.invert(d.data[d.data.length - 1][self.y_attribute]), self.gauss_y.invert(self.center), self.gauss_sigma(self.weight)))\n              )\n            })\n\n            self.brushing = out;\n\n            self.updateHighlight();\n          })\n          .on(\"mouseup\", function(d) {\n            self.mouse_event.on(\"mousemove\", null).on(\"mouseup\", null);\n          })\n      })\n      .moveToFront()\n\n    // set the ranges\n    this.x = d3.scaleLinear()\n      .range([0, this.lc_width]);\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n\n    this.focus_x = d3.scaleLinear()\n      .range([0, this.focus_width]);\n\n    this.gauss_x = d3.scaleLinear()\n    this.gauss_y = d3.scaleLinear()\n      .domain([-5, 5])\n\n    this.gauss_sigma = d3.scaleLinear()\n      .range([0.001, 3])\n      .domain([0, this.focus_width])\n\n    this.gradientColor = d3.scaleLinear()\n      .range([0, 1])\n\n    // add the x Axis\n    this.linechart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n    // x axis label\n    this.linechart.append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", this.height + 26)\n      .attr(\"x\", this.width / 2)\n      .text(this.x_label);\n\n    // add the x Axis\n    this.focus.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n    // x axis label\n    this.focus.append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", this.height + 26)\n      .attr(\"x\", this.width / 2)\n      .text(\"day\");\n\n    // add the y Axis\n    this.linechart.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n\n    // y axis label\n    this.linechart.append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -4)\n      .text(this.y_label);\n\n    // add the y Axis\n    this.focus.append(\"g\")\n      .attr(\"transform\", \"translate(\" + this.focus_width + \", 0)\")\n      .attr(\"class\", \"yAxis\")\n\n    // y axis label\n    this.focus.append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -4)\n      .attr(\"x\", this.focus_width)\n      .text((d) => { return this.y_attribute });\n\n    // define the line\n    this.valueline = d3.line()\n      .x((d) => this.x(d[this.x_attribute]))\n      .y((d) => this.y(d[this.y_attribute]));\n\n    this.focusline = d3.line()\n      .x((d) => this.focus_x(this.gauss_x(d[\"x\"])))\n      .y((d) => this.y(this.gauss_y(d[\"y\"])));\n\n    let y_attribute = this.y_attribute\n\n    // Update axis\n    this.linechart.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.linechart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    this.focus.selectAll(\".yAxis\")\n      .call(d3.axisRight(this.y));\n    this.focus.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.focus_x).ticks(2));\n  }\n\n  updateHighlight() {\n    let self = this;\n\n    this.linechart.selectAll(\"path.line\")\n      .attr(\"opacity\", function(d) {\n        return d[\"highlight\"]\n      })\n\n    this.focus.selectAll(\"rect.bar\")\n      .attr(\"opacity\", function(b) {\n        let opacity = 0;\n\n        self.data.forEach((d: any[]) => {\n          let value = d[\"data\"][d[\"data\"].length - 1][self.y_attribute];\n\n          if(value > b.x0 && value < b.x1) {\n            opacity += d[\"highlight\"]\n          }\n        })\n\n        if(b.length < 1) return 0;\n\n        return opacity / b.length\n      })\n  }\n\n  resetFilter() {\n    this.focus.selectAll(\"path.focusline\").remove();\n    this.brushing = new Map()\n    this.updateHighlight();\n  }\n\n  createGauss() {\n    let line_data = this.getGaussian();\n    this.gauss_x.range(this.focus_x.domain()).domain(d3.extent(line_data, d => d[\"x\"]))\n\n    this.focus.selectAll(\"path.focusline\").remove();\n    let focus_line = this.focus.selectAll(\"path.focusline\")\n      .data([line_data])\n\n    // Distribution line\n    focus_line.enter()\n      .append(\"path\")\n      .attr(\"class\", \"focusline\")\n      .attr(\"d\", (d) => this.focusline(d))\n      .moveToFront();\n  }\n\n  updateGauss() {\n    let line_data = this.getGaussian();\n\n    // Update x axis domain\n    this.gauss_x.range(this.focus_x.domain()).domain(d3.extent(line_data, d => d[\"x\"]))\n\n    // Update line\n    this.focus.selectAll(\"path.focusline\")\n      .data([line_data])\n      .attr(\"d\", (d) => this.focusline(d))\n      .moveToFront();\n  }\n\n  updateChart() {\n    // Update domains\n    let x_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    let y_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[this.y_attribute]))\n    let x_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    let y_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[this.y_attribute]))\n\n    this.focus_data = <any>[];\n\n    this.data.forEach((d: any[]) => {\n      this.focus_data.push(d[\"data\"][d[\"data\"].length - 1])\n    })\n\n    this.x.domain([x_min, x_max]);\n    this.y.domain([y_min, y_max]);\n\n    this.gauss_y.range(this.y.domain())\n\n    let bins = d3.histogram()\n      .value((d) => d[this.y_attribute])\n      .domain(this.y.domain())\n      .thresholds(d3.range(y_min, y_max, (y_max - y_min) / 20))\n      (this.focus_data);\n\n    this.focus_x.domain([0, d3.max(bins, (d: any[]) => d.length)]);\n\n    // Select chart\n    this.linechart.selectAll(\"path.line\").remove();\n    let chart = this.linechart.selectAll(\"path.line\")\n      .data(this.data)\n\n\n    this.focus.selectAll(\".bar\").remove();\n    let focus_chart = this.focus.selectAll(\"rect.bars\")\n      .data(bins)\n\n    // Update axis\n    this.linechart.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.linechart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    this.focus.selectAll(\".yAxis\")\n      .call(d3.axisRight(this.y));\n    this.focus.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.focus_x).ticks(2));\n\n    // Linechart\n    chart.exit().remove();\n\n    chart.enter()\n      .append(\"path\")\n      .attr(\"class\", \"line\")\n      // .classed(\"highlight\", function(this, d) {\n      //   if (d[\"highlight\"] == 1) { return true; }\n      //   else { return false; }\n      // })\n      // .classed(\"background\", function(this, d) {\n      //   if (d[\"highlight\"] == 2) { return true; }\n      //   else { return false; }\n      // })\n      .attr(\"d\", (d) => this.valueline(d[\"data\"]));\n\n    // Barchart\n    // Remove bars\n    focus_chart.exit().remove();\n\n    // Add bars\n    focus_chart.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"transform\", (d) => {\n        return \"translate(0,\" + this.y(d.x1) + \")\";\r\n      })\n      .attr(\"width\", (d) => { return this.focus_x(d.length); })\n      .attr(\"height\", (d) => {\n        return this.y(d.x0) - this.y(d.x1) - 1;\n      })\n      .moveToBack();\n\n  }\n}\n","import * as d3 from \"d3\";\nimport { inject, noView, bindable, bindingMode, BindingEngine } from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class LineCharts {\n  // One-Way\n  @bindable margin = { top: 20, right: 40, bottom: 35, left: 40, middle: 20, y: 35 };\n  @bindable x_attribute = \"x\";\n  @bindable x_label = \"days\";\n  @bindable redraw = 0;\n  @bindable reset = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n\n  // D3 variables\n  private initialized = false;\n  private mouse_event;\n  private svg;\n  private dimensions;\n  private charts;\n  private x;\n  private y = new Map();\n  private focus_x = new Map();\n  private gauss_x;\n  private gauss_y = new Map();\n  private gauss_sigma;\n  private gauss_max_sigma;\n  private gradientColor;\n  private valueline = new Map();\n  private focusline = new Map();\n  private filters = new Map()\n  private focus_data;\n  private histogram;\n  private brush;\n  private center = 1.0;\n  private weight = 1.0;\n  private selected_time;\n  private bins;\n  private x_values;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n  private lc_width = 50;\n  private lc_height = 500;\n  private focus_width = 50;\n  private focus_height = 500;\n  private focus_offset = 100;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n    if (this.data) {\n      // subscribe to the data array and watch for changes\n      this.subscription = this.bindingEngine\n        .collectionObserver(this.data)\n        .subscribe(splices => this.dataMutated(splices));\n    }\n\n    // set the dimensions and margins of the graph\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.lc_width = this.width * 0.8;\n    this.focus_width = this.width * 0.2 - this.margin.left;\n\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    if (this.data.length > 1) {\n      if(!this.initialized) this.initChart()\n\n      this.updateChart();\n      this.svg.selectAll(\"path.focusline\").remove()\n    }\n    else {\n      this.svg.selectAll(\".line\").remove()\n      this.svg.selectAll(\".bar\").remove()\n      this.svg.selectAll(\"path.focusline\").remove()\n    }\n  }\n\n  redrawChanged() {\n    if (this.data.length > 1) {\n      this.dimensions.forEach((dim) => {\n        this.updateHighlight(dim);\n      })\n    }\n  }\n\n  resetChanged() {\n    if(this.initialized) {\n      this.svg.remove()\n      this.initialized = false;\n    }\n  }\n\n  unbind() {\n    this.subscription.dispose();\n  }\n\n  getGaussian(dim) {\n    let data = [];\n    let rnd = d3.randomUniform(-5, 5);\n\n    // loop to populate data array with\n    // probability - quantile pairs\n    for (var i = 0; i < 10000; i++) {\n      let q = rnd() // calc random draw from uniform dist\n      let p = this.gaussian(q, this.gauss_y.get(dim).invert(this.center), this.gauss_sigma(this.weight)) // calc prob of rand draw\n\n      // Set very low probability to zero\n      if(p < 0.0001) p = 0;\n\n      let el = {\n        \"y\": q,\n        \"x\": p\n      }\n      data.push(el)\n    };\n\n    this.gradientColor.domain([0, d3.max(data, x => x[\"x\"])])\n    // need to sort for plotting\n    data.sort(function(a, b) { return (a.y > b.y) ? 1 : ((b.y > a.y) ? -1 : 0); });\n\n    return data;\n  };\n\n  //taken from Jason Davies science library\n  // https://github.com/jasondavies/science.js/\n  gaussian(x, mean, sigma) {\n    let gaussianConstant = 1 / Math.sqrt(2 * Math.PI);\n\n    x = (x - mean) / sigma;\n    let g = gaussianConstant * Math.exp(-.5 * x * x) / sigma;\n\n    if (g < 0) {\n      g = 0;\n    }\n\n    return g;\n  }\n\n  resetFilter(dim) {\n    this.charts.get(dim).focus.selectAll(\"path.focusline\").remove();\n    let out = new Map()\n    this.filters.set(dim, new Map())\n\n    // Update average filter\n    this.filters.forEach((v, k) => {\n      if(v.size > 0) {\n        v.forEach((iv, ik) => {\n          if(out.has(ik)) {\n            let value = out.get(ik)\n\n            out.set(ik, (value + iv)/2)\n          }\n          else {\n            out.set(ik, iv)\n          }\n        })\n      }\n    })\n\n    this.brushing = out;\n  }\n\n  resolve_brushing(dim, new_filter) {\n    let out = new Map()\n\n    this.filters.set(dim, new_filter)\n\n    // Update average filter\n    new_filter.forEach((v, k) => {\n      let temp = 0;\n      let counter = 0;\n\n      this.filters.forEach((iv, ik) => {\n        if (iv.size > 0) {\n          temp = temp + iv.get(k);\n          counter++;\n        }\n      })\n\n      temp = temp / counter;\n\n      out.set(k, temp)\n    })\n\n    this.brushing = out;\n  }\n\n  initChart() {\n    let self = this;\n\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Get y values\n    this.dimensions = d3.keys(this.data[0][\"data\"][0]).filter((d) => {\n      return d != this.x_attribute\n    });\n\n    // Set height value\n    this.lc_height = (this.y_size - this.margin.top - this.margin.bottom - ((this.dimensions.length-1) * this.margin.y))/this.dimensions.length;\n    this.focus_height = this.lc_height\n\n    this.focus_offset = this.lc_width + this.margin.middle + this.margin.left;\n\n    // Reset charts map\n    this.charts = new Map();\n\n    // Create initial chart areas\n    let margin_iterator = 0;\n    this.dimensions.map((dim) => {\n      // Linechart area\n      let linechart = this.svg\n        .append(\"g\")\n        .attr(\"width\", this.lc_width)\n        .attr(\"height\", this.lc_height)\n        .attr(\"transform\",\n        \"translate(\" + this.margin.left + \", \" + (this.margin.top + (this.focus_height + this.margin.y) * margin_iterator) + \")\")\n        .on(\"click\", (d) => {\n          this.resetFilter(dim);\n        });\n\n      let focus = this.svg\n        .append(\"g\")\n        .attr(\"transform\",\n        \"translate(\" + this.focus_offset + \", \" + (this.margin.top + (this.focus_height + this.margin.y) * margin_iterator) + \")\")\n\n      margin_iterator++;\n\n      focus\n        .append(\"rect\")\n        .attr(\"width\", this.focus_width)\n        .attr(\"height\", this.focus_height)\n        .style(\"opacity\", 0)\n        .on(\"mousedown\", function(d) {\n          self.center = self.y.get(dim).invert(d3.mouse(this)[1]);\n          self.weight = d3.mouse(this)[0];\n          self.createGauss(dim);\n          self.updateGauss(dim);\n\n          let new_filter = new Map()\n          self.data.forEach(d => {\n            new_filter.set(\n              d[\"id\"],\n              self.gradientColor(self.gaussian(self.gauss_y.get(dim).invert(d.data[self.selected_time][dim]), self.gauss_y.get(dim).invert(self.center), self.gauss_sigma(self.weight)))\n            )\n          })\n\n          self.resolve_brushing(dim, new_filter);\n\n          self.mouse_event = d3.select(this)\n            .on(\"mousemove\", function(d) {\n              self.center = self.y.get(dim).invert(d3.mouse(this)[1]);\n\n              self.weight = d3.mouse(this)[0];\n              self.updateGauss(dim);\n\n              let new_filter = new Map()\n\n              self.data.forEach(d => {\n                new_filter.set(\n                  d[\"id\"],\n                  self.gradientColor(self.gaussian(self.gauss_y.get(dim).invert(d.data[self.selected_time][dim]), self.gauss_y.get(dim).invert(self.center), self.gauss_sigma(self.weight)))\n                )\n              })\n\n              self.resolve_brushing(dim, new_filter);\n            })\n            .on(\"mouseup\", function(d) {\n              self.mouse_event.on(\"mousemove\", null).on(\"mouseup\", null);\n            })\n        })\n        .moveToFront()\n\n        // add the x Axis\n        linechart.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.lc_height + \")\")\n          .attr(\"class\", \"xAxis\");\n\n        // x axis label\n        linechart.append(\"text\")\n          .style(\"text-anchor\", \"middle\")\n          .attr(\"y\", this.lc_height + 26)\n          .attr(\"x\", this.lc_width / 2)\n          .text(this.x_attribute);\n\n        let drag = d3.drag()\n          .on(\"start\", function() { d3.select(this).classed('active',true); })\n          .on(\"drag\", function(d) {\n            if(d3.event.x >= 0 && d3.event.x <= self.lc_width) {\n              d3.select(this).select(\"line\")\n                .raise()\n                .attr(\"x1\", d3.event.x)\n                .attr(\"x2\", d3.event.x)\n\n              d3.select(this).select(\"circle\")\n                .raise()\n                .attr(\"cx\", d3.event.x)\n              }\n\n              let closest = self.x_values.reduce(function(prev, curr) {\n                return (Math.abs(curr - self.x.invert(d3.event.x)) < Math.abs(prev - self.x.invert(d3.event.x)) ? curr : prev);\n              });\n\n              self.selected_time = closest\n\n              self.updateBars(dim);\n          })\n          .on('end', function() { d3.select(this).classed('active',false); });\n\n        // Add time selection line\n        let selector = linechart\n          .append(\"g\")\n          .attr(\"class\", \"time-selector\")\n          .attr(\"width\", this.lc_width)\n          .attr(\"height\", this.lc_width)\n          .call(drag)\n\n        selector.append(\"line\")\n          .attr(\"stroke\", \"black\")\n          .attr(\"x1\", this.lc_width)\n          .attr(\"y1\", 0)\n          .attr(\"x2\", this.lc_width)\n          .attr(\"y2\", this.lc_height);\n\n        selector.append(\"circle\")\n          .attr(\"fill\", \"black\")\n          .attr(\"cx\", this.lc_width)\n          .attr(\"cy\", 0)\n          .attr(\"r\", 10)\n\n        // add the x Axis\n        focus.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.lc_height + \")\")\n          .attr(\"class\", \"xAxis\");\n\n        // x axis label\n        // focus.append(\"text\")\n        //   .style(\"text-anchor\", \"middle\")\n        //   .attr(\"y\", this.height + 26)\n        //   .attr(\"x\", this.width / 2)\n        //   .text(\"day\");\n\n        // add the y Axis\n        linechart.append(\"g\")\n          .attr(\"class\", \"yAxis\")\n\n        // y axis label\n        linechart.append(\"text\")\n          .style(\"text-anchor\", \"middle\")\n          .attr(\"y\", -4)\n          .text(dim);\n\n        // add the y Axis\n        focus.append(\"g\")\n          .attr(\"transform\", \"translate(\" + this.focus_width + \", 0)\")\n          .attr(\"class\", \"yAxis\")\n\n        // y axis label\n        focus.append(\"text\")\n          .style(\"text-anchor\", \"middle\")\n          .attr(\"y\", -4)\n          .attr(\"x\", this.focus_width)\n          .text(dim);\n\n        // for all charts\n        this.x = d3.scaleLinear()\n          .range([0, this.lc_width]);\n\n        this.gauss_x = d3.scaleLinear()\n\n        this.gauss_sigma = d3.scaleLinear()\n          .range([0.001, 3])\n          .domain([0, this.focus_width])\n\n        this.gradientColor = d3.scaleLinear()\n          .range([0, 1])\n\n        // for each chart\n        let y = d3.scaleLinear()\n          .range([this.lc_height, 0]);\n\n        this.y.set(dim, y)\n\n        let focus_x = d3.scaleLinear()\n          .range([0, this.focus_width]);\n\n        this.focus_x.set(dim , focus_x)\n\n        let gauss_y = d3.scaleLinear()\n          .domain([-5, 5])\n\n        this.gauss_y.set(dim, gauss_y)\n\n        // define the line\n        let valueline = d3.line()\n          .x((d) => this.x(d[this.x_attribute]))\n          .y((d) => this.y.get(dim)(d[dim]));\n\n        this.valueline.set(dim, valueline)\n\n        let focusline = d3.line()\n          .x((d) => this.focus_x.get(dim)(this.gauss_x(d[\"x\"])))\n          .y((d) => this.y.get(dim)(this.gauss_y.get(dim)(d[\"y\"])));\n\n        this.focusline.set(dim, focusline)\n\n        // Update axis\n        linechart.selectAll(\".xAxis\")\n          .call(d3.axisBottom(this.x));\n        linechart.selectAll(\".yAxis\")\n          .call(d3.axisLeft(this.y.get(dim)));\n\n        focus.selectAll(\".yAxis\")\n          .call(d3.axisRight(this.y.get(dim)));\n        focus.selectAll(\".xAxis\")\n          .call(d3.axisBottom(this.focus_x.get(dim)).ticks(2));\n\n        this.charts.set(dim, {linechart: linechart, focus: focus})\n\n        this.filters.set(dim, new Map())\n    })\n\n    this.initialized = true;\n  }\n\n  updateBars = (dim) => {\n    let y_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[dim]))\n    let y_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[dim]))\n\n    let focus_data = <any>[];\n    this.data.forEach((d: any[]) => {\n      focus_data.push(d[\"data\"][this.selected_time][dim])\n    })\n\n    this.bins = d3.histogram()\n      .domain(this.y.get(dim).domain())\n      .thresholds(d3.range(y_min, y_max, (y_max - y_min) / 20))\n      (focus_data);\n\n    this.focus_x.get(dim).domain([0, d3.max(this.bins, (d: any[]) => d.length)]);\n\n    this.charts.get(dim).focus.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.focus_x.get(dim)).ticks(2));\n\n    this.charts.get(dim).focus.selectAll(\".bar\").remove();\n    let focus_chart = this.charts.get(dim).focus.selectAll(\"rect.bars\")\n      .data(this.bins)\n\n    // Remove bars\n    focus_chart.exit().remove();\n\n    // Add bars\n    focus_chart.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"transform\", (d) => {\n        return \"translate(0,\" + this.y.get(dim)(d.x1) + \")\";\n      })\n      .attr(\"width\", (d) => {\n        return this.focus_x.get(dim)(d.length); })\n      .attr(\"height\", (d) => {\n        return this.y.get(dim)(d.x0) - this.y.get(dim)(d.x1) - 1;\n      })\n      .moveToBack();\n\n      if(this.filters.get(dim).size > 0) {\n        this.updateGauss(dim);\n\n        let new_filter = new Map()\n\n        this.data.forEach(d => {\n          new_filter.set(\n            d[\"id\"],\n            this.gradientColor(this.gaussian(this.gauss_y.get(dim).invert(d.data[this.selected_time][dim]), this.gauss_y.get(dim).invert(this.center), this.gauss_sigma(this.weight)))\n          )\n        })\n\n        this.resolve_brushing(dim, new_filter);\n\n        this.updateHighlight(dim)\n      }\n  }\n\n  updateHighlight(dim) {\n    let self = this;\n\n    this.charts.get(dim).linechart.selectAll(\"path.line\")\n      .attr(\"opacity\", function(d) {\n        return d[\"highlight\"]\n      })\n\n    this.charts.get(dim).focus.selectAll(\"rect.bar\")\n      .attr(\"opacity\", function(b) {\n        let opacity = 0;\n\n        self.data.forEach((d: any[]) => {\n          let value = d[\"data\"][self.selected_time][dim];\n\n          if(value > b.x0 && value < b.x1) {\n            opacity += d[\"highlight\"]\n          }\n        })\n\n        if(b.length < 1) return 0;\n\n        return opacity / b.length\n      })\n  }\n\n  createGauss(dim) {\n    let line_data = this.getGaussian(dim);\n    this.gauss_x.range(this.focus_x.get(dim).domain()).domain(d3.extent(line_data, d => d[\"x\"]))\n\n    this.charts.get(dim).focus.selectAll(\"path.focusline\").remove();\n    let focus_line = this.charts.get(dim).focus.selectAll(\"path.focusline\")\n      .data([line_data])\n\n    // Distribution line\n    focus_line.enter()\n      .append(\"path\")\n      .attr(\"class\", \"focusline\")\n      .attr(\"d\", (d) => {this.focusline.get(dim)(d)})\n      .moveToFront();\n  }\n\n  updateGauss(dim) {\n    let line_data = this.getGaussian(dim);\n\n    // Update x axis domain\n    this.gauss_x.range(this.focus_x.get(dim).domain()).domain(d3.extent(line_data, d => d[\"x\"]))\n\n    // Update line\n    this.charts.get(dim).focus.selectAll(\"path.focusline\")\n      .data([line_data])\n      .attr(\"d\", (d) => this.focusline.get(dim)(d))\n      .moveToFront();\n  }\n\n  updateChart() {\n    // Update domains\n    let x_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    let x_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    this.x.domain([x_min, x_max]);\n\n    this.x_values = this.data[0][\"data\"].map((d) => {\n      return d[this.x_attribute]\n    })\n\n    this.dimensions.map((dim) => {\n      let y_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[dim]))\n      let y_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[dim]))\n\n    this.selected_time = x_max;\n\n      let focus_data = <any>[];\n      this.data.forEach((d: any[]) => {\n        focus_data.push(d[\"data\"][this.selected_time][dim])\n      })\n\n      this.y.get(dim).domain([y_min, y_max]);\n      this.gauss_y.get(dim).range(this.y.get(dim).domain())\n\n      this.bins = d3.histogram()\n        .domain(this.y.get(dim).domain())\n        .thresholds(d3.range(y_min, y_max, (y_max - y_min) / 20))\n        (focus_data);\n\n      this.focus_x.get(dim).domain([0, d3.max(this.bins, (d: any[]) => d.length)]);\n\n      // Select chart\n      this.charts.get(dim).linechart.selectAll(\"path.line\").remove();\n      let chart = this.charts.get(dim).linechart.selectAll(\"path.line\")\n        .data(this.data)\n\n      this.charts.get(dim).focus.selectAll(\".bar\").remove();\n      let focus_chart = this.charts.get(dim).focus.selectAll(\"rect.bars\")\n        .data(this.bins)\n\n      // Update axis\n      this.charts.get(dim).linechart.selectAll(\".xAxis\")\n        .call(d3.axisBottom(this.x));\n      this.charts.get(dim).linechart.selectAll(\".yAxis\")\n        .call(d3.axisLeft(this.y.get(dim)));\n\n      this.charts.get(dim).focus.selectAll(\".yAxis\")\n        .call(d3.axisRight(this.y.get(dim)));\n      this.charts.get(dim).focus.selectAll(\".xAxis\")\n        .call(d3.axisBottom(this.focus_x.get(dim)).ticks(2));\n\n      // Linechart\n      chart.exit().remove();\n\n      chart.enter()\n        .append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", (d) => this.valueline.get(dim)(d[\"data\"]));\n\n      // Barchart\n      // Remove bars\n      focus_chart.exit().remove();\n\n      // Add bars\n      focus_chart.enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"transform\", (d) => {\n          return \"translate(0,\" + this.y.get(dim)(d.x1) + \")\";\n        })\n        .attr(\"width\", (d) => {\n          return this.focus_x.get(dim)(d.length); })\n        .attr(\"height\", (d) => {\n          return this.y.get(dim)(d.x0) - this.y.get(dim)(d.x1) - 1;\n        })\n        .moveToBack();\n    })\n  }\n}\n","import * as d3 from \"d3\";\nimport * as _ from 'lodash';\nimport { inject, noView, bindable, bindingMode, BindingEngine } from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class parallelCoordinatesGauss {\n  // One-Way\n  @bindable margin = { top: 60, right: 20, bottom: 30, left: 40 };\n  @bindable redraw = 0;\n  @bindable reset = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) selected;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n  private initialized = false;\n\n  // D3 variables\n  private svg;\n  private chart;\n  private x = {};\n  private y;\n  private dimensions = <any>[];\n  private line;\n  private background;\n  private foreground;\n\n  // set the dimensions and margins of the graph\n  private x_size = 500;\n  private y_size = 500;\n  private width;\n  private height;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n    if (this.data) {\n      // subscribe to the data array and watch for changes\n      this.subscription = this.bindingEngine\n        .collectionObserver(this.data)\n        .subscribe(splices => this.dataMutated(splices));\n    }\n\n    // set the dimensions and margins of the graph\n    this.x_size = this.element.parentElement.offsetWidth\n    this.y_size = this.element.parentElement.offsetHeight\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    if(!this.initialized) this.initChart()\n    this.updateChart();\n  }\n\n  redrawChanged() {\n    if (this.data.length > 1) {\n      this.updateHighlight();\n    }\n  }\n\n  resetChanged() {\n    if(this.initialized) {\n      this.svg.remove()\n      this.dataMutated(\"\")\n      this.initialized = false;\n    }\n  }\n\n  // Remove the watcher after disposing the class\n  unbind() {\n    this.subscription.dispose();\n  }\n\n  // D3 functions\n\n  // Draw the lines\n  private path(d) {\n    return this.line(this.dimensions.map((p) => {\n      return [this.x[p](d[p]), this.y(p)];\r\n    }));\n  }\n\n  // Update external variables with current brushes\n  private getBrushing = (g, x, dat) => {\n    let temp = <any>[];\n    let brushes = new Map();\n\n    g.selectAll(\".brush\")\n      .filter(function(this, d) {\n        return d3.brushSelection(this);\n      })\n      .each(function(this, d) {\n        let brush_selection = d3.brushSelection(this)\n        let extent = <any>[]\n        let selection = <any>[];\n\n        if (brush_selection != null) {\n          extent = [x[d].invert(brush_selection[1]), x[d].invert(brush_selection[0])]\n        }\n\n        let brushed_elements = dat.filter(x => x[\"data\"][d] >= extent[1] && x[\"data\"][d] <= extent[0])\n\n        brushes.set(d, brushed_elements.map(x => x[\"id\"]))\n      });\n\n    let brushed = _.intersection(...Array.from(brushes.values()));\n\n    // If no element is brushed return a x to let the system know that\n    // there are brushes active\n    if (brushes.size > 0 && brushed.length == 0) {\n      brushed.push(\"x\")\n    }\n\n    this.brushing = brushed;\n  }\n\n  initChart() {\n    // append the svg object to the chart div of the page\n    // append a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n\n    this.chart = this.svg\n      .append(\"g\")\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n    // set the x range\n    this.y = d3.scalePoint()\n      .range([0, this.height]);\n\n    // Basic initialization\n    this.line = d3.line()\n      .curve(d3.curveMonotoneY);\n\n    this.initialized = true;\n  }\n\n  updateHighlight() {\n    this.svg.selectAll(\".line\")\n      .attr(\"opacity\", function(d) {\n        return d[\"highlight\"]\n      })\n  }\n\n  updateChart() {\n    // Get current dataset dimensions: Keys of the map\n    if (this.data.length > 0) {\n      this.dimensions = d3.keys(this.data[0][\"data\"]).filter((d) => {\n        return d != \"name\"\n      });\n    }\n\n    // Create corresponding y axis\n    // Currently only linear values\n    this.dimensions.map((dim) => {\n      let ext = <any>d3.extent(this.data, (data) => {\n        return data[\"data\"][dim];\n      })\n\n      // Extend domain if its only one point\n      if (ext[0] == ext[1]) {\n        ext[0] -= ext[0] * 0.1;\n        ext[1] += ext[1] * 0.1;\n      }\n\n      this.x[dim] = d3.scaleLinear()\n        .range([this.width, 0])\n        .domain([ext[1], ext[0]])\n    });\n\n    // Create the y axis\n    this.y.domain(this.dimensions);\n\n    // Draw lines\n    this.background = this.chart.append(\"g\")\n      .selectAll(\"path\")\n      .data(this.data)\n      .enter().append(\"path\")\n      .attr(\"class\", \"line\")\n      .classed(\"highlight\", function(this, d) {\n        if (d[\"highlight\"] == 1) { return true; }\n        else { return false; }\n      })\n      .classed(\"background\", function(this, d) {\n        if (d[\"highlight\"] == 2) { return true; }\n        else { return false; }\n      })\n      .attr(\"d\", (d) => { return this.path(d[\"data\"]) })\n      // .on(\"click\", (d) => {\n      //   this.selected = d[\"id\"]\n      // });\n\n    // Create local versions of class variables\n    // This is necessary due to the nature of TS and D3\n\n    let width = this.width\n    let x = this.x;\n    let dat = this.data\n    let getBrushing = this.getBrushing;\n\n    // Create drawing area\n    let g = this.chart.selectAll(\".dimension\")\n      .data(this.dimensions)\n      .enter().append(\"g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", (d) => {\n        return \"translate(0,\" + this.y(d) + \")\";\r\n      });\n\n    // Add axis\n    g.append(\"g\")\n      .each(function(this, d) {\n        let ext = x[d].domain()\n\n        // Set custom tick amount if the values are too small\n        let tick_multiplier = 1;\n\n        if(ext[0] - ext[1] < 0.0001) {\n          tick_multiplier = 0.6;\n        }\n        else if(ext[0] - ext[1] < 0.001) {\n          tick_multiplier = 0.7;\n        }\n        else if(ext[0] - ext[1] < 0.01) {\n          tick_multiplier = 0.8;\n        }\n\n        let ticks = x[d].ticks().length\n\n        d3.select(this).call(d3.axisTop(x[d]).ticks(Math.ceil(ticks * tick_multiplier)));\n      });\n\n    // Add titles for the axis\n    g.append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .attr(\"transform\", \"rotate(-90)\")\n      .text((d) => { return d; });\n\n    // Add and store a brush for each axis.\n    g.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .each(function(this, d) {\n        d3.select(this).call(d3.brushX()\n          .extent([[0, -9], [width, 9]])\n          .on(\"brush\", () => {\n            if (!d3.event.sourceEvent) return; // Only transition after input.\n\n            getBrushing(g, x, dat)\n          })\n          .on(\"end\", () => {\n            if (!d3.event.sourceEvent) return; // Only transition after input.\n\n            getBrushing(g, x, dat)\n          })\n        );\n      })\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import { autoinject, observable } from 'aurelia-framework';\nimport * as d3 from \"d3\"\n\n@autoinject\nexport class Gauss {\n  file;\n  data;\n  dimensions = [];\n  selected_dim = \"\";\n  dim_not_selected = true;\n  data_not_loaded = true;\n\n  @observable brushing_parallel;\n  redraw_parallel;\n\n  @observable brushing_lines;\n  redraw_lines;\n\n  resetChart;\n\n  inFilter = []\n\n  data_parallel = <any[]>[]\n  data_lines = <any[]>[]\n  data_lines_original = <any[]>[]\n  data_length = 0;\n\n  current_filter = new Set();\n\n  position = 'right';\n  trigger = 'mouseover';\n\n  toggled(open) {\n      if (open) {\n          // console.log('opened');\n      } else {\n          // console.log('closed');\n      }\n  }\n\n  fileSelected() {\n    let reader = new FileReader();\n    let file = this.file[0];\n\n    reader.onload = (event: any) => {\n      this.data = JSON.parse(event.target.result);\n      this.load()\n    }\n    reader.readAsText(file);\n  }\n\n  loadExample() {\n    fetch(\"../../data.json\").then(r => r.json())\n      .then(data => {\n        this.data = data\n        this.load()\n      })\n      .catch(e => console.log(\"Error\"))\n  }\n\n  selectDim(dim) {\n    this.selected_dim = dim;\n    this.dim_not_selected = false;\n  }\n\n  visualize() {\n    this.resetChart = this.resetChart == 0 ? 1 : 0;\n\n    this.data_parallel.length = 0\n    this.data_lines_original.length = 0\n\n    for (let i = 0; i < this.data.length; i++) {\n      let d = this.data[i]\n\n      this.data_parallel.push({\n        \"id\": i,\n        \"highlight\": 0,\n        \"data\": d.params\n      })\n\n      this.data_lines_original.push({\n        \"id\": i,\n        \"highlight\": 0,\n        \"data\": d.data\n      })\n    }\n\n    this.data_length = this.data_lines_original.length;\n    this.filterOutData([])\n  }\n\n  brushing_linesChanged() {\n    this.updateOutData(this.brushing_lines);\n    this.updateInData(this.brushing_lines);\n  }\n\n  brushing_parallelChanged() {\n    this.updateParallelData(this.brushing_parallel);\n    this.filterOutData(this.brushing_parallel);\n  }\n\n  private updateOutData(mapping) {\n    // Set highlight colors\n    this.data_lines.forEach(x => {\n      x[\"highlight\"] = mapping.get(x[\"id\"])\n    })\n\n    this.redraw_lines = this.redraw_lines == 0 ? 1 : 0;\n  }\n\n  private updateInData(mapping) {\n    if (this.inFilter.length > 0) {\n      this.data_parallel\n        .filter(x => this.inFilter.includes(x[\"id\"]))\n        .forEach(x => {\n          x[\"highlight\"] = mapping.get(x[\"id\"])\n        })\n    }\n    else {\n      this.data_parallel\n        .forEach(x => {\n          x[\"highlight\"] = mapping.get(x[\"id\"])\n        })\n    }\n\n    this.redraw_parallel = this.redraw_parallel == 0 ? 1 : 0;\n  }\n\n  private updateParallelData(ids) {\n    this.inFilter = ids;\n\n    if (ids.length > 0) {\n      this.data_parallel.forEach(x => {\n        if (ids.includes(x[\"id\"])) {\n          x[\"highlight\"] = 1;\n        }\n        else {\n          x[\"highlight\"] = 0;\n        }\n      })\n    }\n    else {\n      this.data_parallel.forEach(x => {\n        x[\"highlight\"] = 1;\n      })\n    }\n\n    this.redraw_parallel = this.redraw_parallel == 0 ? 1 : 0;\n  }\n\n  private filterOutData(ids) {\n    if (ids.length > 1) {\n      let highlight_list = new Set(ids);\n\n      this.data_lines.length = 0\n\n      this.data_lines.push(...this.data_lines_original.filter(x => highlight_list.has(x[\"id\"])))\n\n      // Save current filter\n      this.current_filter = highlight_list;\n    }\n    else {\n      this.data_lines.length = 0\n      this.data_lines.push(...this.data_lines_original)\n    }\n  }\n\n  load() {\n    if (this.data.length > 0) {\n      if (\"params\" in this.data[0] && \"data\" in this.data[0]) {\n        // Get y values\n        this.dimensions = d3.keys(this.data[0][\"data\"][0]).filter((d) => {\n          return d\n        });\n\n        this.selected_dim = this.dimensions[0];\n        this.dim_not_selected = false;\n\n        this.data_not_loaded = false;\n      }\n    }\n  }\n}\n"],"sourceRoot":".."}